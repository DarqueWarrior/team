parameters:
  os: ''

steps:
- task: PowerShell@2
  displayName: 'Build Module'
  inputs:
    targetType: 'inline'
    script: '.\Build-Module.ps1 -installDep'

- task: PowerShell@2
  displayName: 'Install Pester'
  inputs:
    targetType: 'inline'
    script: 'Install-Module -Name Pester -Repository PSGallery -Force -Scope CurrentUser -AllowClobber -SkipPublisherCheck'

- task: PowerShell@2
  displayName: 'Run Unit Tests'
  inputs:
    targetType: 'inline'
    script: |
      Import-Module .\dist\*.psd1
      Invoke-Pester -Script .\unit -EnableExit -Strict -OutputFile test-results.xml -OutputFormat NUnitXml -passthru
    workingDirectory: '$(System.DefaultWorkingDirectory)'

- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testResultsFormat: 'NUnit'
    testResultsFiles: '**\test-results.xml'
    testRunTitle: '${{ parameters.os }} Unit Tests'
  condition: succeededOrFailed()